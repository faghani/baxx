███████╗██╗  ██╗ █████╗ ███╗   ███╗██████╗ ██╗     ███████╗
██╔════╝╚██╗██╔╝██╔══██╗████╗ ████║██╔══██╗██║     ██╔════╝
█████╗   ╚███╔╝ ███████║██╔████╔██║██████╔╝██║     █████╗  
██╔══╝   ██╔██╗ ██╔══██║██║╚██╔╝██║██╔═══╝ ██║     ██╔══╝  
███████╗██╔╝ ██╗██║  ██║██║ ╚═╝ ██║██║     ███████╗███████╗
╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝     ╚══════╝╚══════╝
                                                           



## upload everything from a directory

find . -type f -exec curl --data-binary @{}      \
              https://baxx.dev/io/$BAXX_TOKEN/{} \;

## upload in parallel

find . -type f | xargs -P 4 -I {} -- \
  curl -T {} https://baxx.dev/io/$BAXX_TOKEN/{}


## upload only the files that have difference in shasum

for i in $(find . -type f); do \
 echo -n "$i.."
 sha=$(shasum -a 256 $i | cut -f 1 -d ' ')
 (curl -s https://baxx.dev/sync/sha256/$BAXX_TOKEN/$sha -f && echo SKIP $i) || \
 (curl -T $i https://baxx.dev/io/$BAXX_TOKEN/$i -f)
done


## shell alias

### indentation is messed up  to fit 80 chars

```
export BAXX_TOKEN=...
baxx_put() {
 if [ $# -lt 2 ]; then
  echo "usage: $0 file dest [force]"
 else

  file=$1
  dest=$2
  force=${3:-noforce}

  sha=$(shasum -a 256 $file | cut -f 1 -d ' ')

  (curl -s https://baxx.dev/sync/sha256/$BAXX_TOKEN/$sha -f >/dev/null 2>&1 \
   && [[ "$force" != "force" ]] \
   && echo SKIP $file .. already baxxed, use \"$0 $1 $2 force\" to force) || \
  curl -T $file https://baxx.dev/io/$BAXX_TOKEN/$dest

 fi
}


baxx_get() {
 if [ $# -ne 2 ]; then
  echo "usage: $0 file dest"
 else
  file=$1
  dest=$2
  curl https://baxx.dev/io/$BAXX_TOKEN/$file > $dest
fi
}


baxx_delete() {
 if [ $# -ne 1 ]; then
  echo "usage: $0 file"
 else
  file=$1
  curl -X DELETE https://baxx.dev/io/$BAXX_TOKEN/$file
 fi
}

baxx_rmdir() {
 if [ $# -ne 1 ]; then
  echo "usage: $0 path"
 else
  path=$1
  curl -d '{"force":true}' \
    -X DELETE https://baxx.dev/io/$BAXX_TOKEN/$path
 fi
}

baxx_rmrf() {
 if [ $# -ne 1 ]; then
  echo "usage: $0 path"
 else
  path=$1
  curl -d '{"force":true,"recursive":true}' \
    -X DELETE https://baxx.dev/io/$BAXX_TOKEN/$path
 fi
}


baxx_ls() {
 curl https://baxx.dev/ls/$BAXX_TOKEN/$*
}

baxx_sync() {
 if [ $# -ne 1 ]; then
  echo "usage: $0 path"
 else
  find $1 -type f \
  | xargs -P4 -I '{}' \
    shasum -a 256 {} \
  | curl -s --data-binary @- https://baxx.dev/sync/sha256/$BAXX_TOKEN \
  | awk '{ print $2 }' \
  | xargs -P4 -I '{}' \
    curl -s -T {} https://baxx.dev/io/$BAXX_TOKEN/backup/{}
 fi
}

```

check out https://github.com/jackdoe/baxx/tree/master/examples
for more examples

then simply do
% baxx_put example.txt /some/dir/example.txt
2918    Sun Mar 10 07:08:35 2019        /some/dir/example.txt@v2755

% baxx_get /some/dir/example.txt example.txt.dl
